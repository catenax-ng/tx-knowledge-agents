name: ZAP Scans

on: [push]

jobs:
  zap_scan1:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.zap_scan1.outputs.id }}
    steps:
      - name: ZAP Scan 1
        id: zap_scan1
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://knowledge.dev.demo.catena-x.net'  # Specify the target URL for scan 1
        env:
          ZAP_REPORT_DIR: ${{ github.workspace }}/zap-scan1-results
      - name: Set output variables
        id: set_output_variables1
        run: echo "::set-output name=id::zap_scan1_results"

  zap_scan2:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.zap_scan2.outputs.id }}
    steps:
      - name: ZAP Scan 2
        id: zap_scan2
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://example.com'  # Specify the target URL for scan 2
        env:
          ZAP_REPORT_DIR: ${{ github.workspace }}/zap-scan2-results
      - name: Set output variables
        id: set_output_variables2
        run: echo "::set-output name=id::zap_scan2_results"

  process_results:
    needs: [zap_scan1, zap_scan2]
    runs-on: ubuntu-latest
    steps:
      - name: Process Results
        id: process_results
        run: |
          echo "Results of ZAP Scan 1: ${{ needs.zap_scan1.outputs.id }}"
          echo "Results of ZAP Scan 2: ${{ needs.zap_scan2.outputs.id }}"
          echo "Combined Results: ${{ needs.zap_scan1.outputs.id }} ${{ needs.zap_scan2.outputs.id }}" >> "$GITHUB_OUTPUT"
